// Code generated by ent, DO NOT EDIT.

package informationv1

import (
	"fmt"

	"github.com/google/uuid"
)

const (
	// Label holds the string label denoting the informationv1 type in the database.
	Label = "information_v1"
	// FieldID holds the string denoting the id field in the database.
	FieldID = "id"
	// FieldCreatedUnix holds the string denoting the created_unix field in the database.
	FieldCreatedUnix = "created_unix"
	// FieldUpdatedUnix holds the string denoting the updated_unix field in the database.
	FieldUpdatedUnix = "updated_unix"
	// FieldDeletedUnix holds the string denoting the deleted_unix field in the database.
	FieldDeletedUnix = "deleted_unix"
	// FieldChannelID holds the string denoting the channel_id field in the database.
	FieldChannelID = "channel_id"
	// FieldRoot holds the string denoting the root field in the database.
	FieldRoot = "root"
	// FieldThumb holds the string denoting the thumb field in the database.
	FieldThumb = "thumb"
	// FieldThumbPath holds the string denoting the thumb_path field in the database.
	FieldThumbPath = "thumb_path"
	// FieldPoster holds the string denoting the poster field in the database.
	FieldPoster = "poster"
	// FieldPosterPath holds the string denoting the poster_path field in the database.
	FieldPosterPath = "poster_path"
	// FieldMedia holds the string denoting the media field in the database.
	FieldMedia = "media"
	// FieldMediaPath holds the string denoting the media_path field in the database.
	FieldMediaPath = "media_path"
	// FieldMediaIndex holds the string denoting the media_index field in the database.
	FieldMediaIndex = "media_index"
	// FieldFrames holds the string denoting the frames field in the database.
	FieldFrames = "frames"
	// FieldFramesPath holds the string denoting the frames_path field in the database.
	FieldFramesPath = "frames_path"
	// FieldFramesParticulars holds the string denoting the frames_particulars field in the database.
	FieldFramesParticulars = "frames_particulars"
	// FieldTitle holds the string denoting the title field in the database.
	FieldTitle = "title"
	// FieldVideoNo holds the string denoting the video_no field in the database.
	FieldVideoNo = "video_no"
	// FieldIntro holds the string denoting the intro field in the database.
	FieldIntro = "intro"
	// FieldAlias holds the string denoting the alias field in the database.
	FieldAlias = "alias"
	// FieldRole holds the string denoting the role field in the database.
	FieldRole = "role"
	// FieldDirector holds the string denoting the director field in the database.
	FieldDirector = "director"
	// FieldSystematics holds the string denoting the systematics field in the database.
	FieldSystematics = "systematics"
	// FieldProducer holds the string denoting the producer field in the database.
	FieldProducer = "producer"
	// FieldPublisher holds the string denoting the publisher field in the database.
	FieldPublisher = "publisher"
	// FieldSortType holds the string denoting the sort_type field in the database.
	FieldSortType = "sort_type"
	// FieldCaption holds the string denoting the caption field in the database.
	FieldCaption = "caption"
	// FieldGroup holds the string denoting the group field in the database.
	FieldGroup = "group"
	// FieldIndex holds the string denoting the index field in the database.
	FieldIndex = "index"
	// FieldReleaseDate holds the string denoting the release_date field in the database.
	FieldReleaseDate = "release_date"
	// FieldFormat holds the string denoting the format field in the database.
	FieldFormat = "format"
	// FieldSeries holds the string denoting the series field in the database.
	FieldSeries = "series"
	// FieldTags holds the string denoting the tags field in the database.
	FieldTags = "tags"
	// FieldLength holds the string denoting the length field in the database.
	FieldLength = "length"
	// FieldSample holds the string denoting the sample field in the database.
	FieldSample = "sample"
	// FieldUncensored holds the string denoting the uncensored field in the database.
	FieldUncensored = "uncensored"
	// FieldSeason holds the string denoting the season field in the database.
	FieldSeason = "season"
	// FieldTotalEpisode holds the string denoting the total_episode field in the database.
	FieldTotalEpisode = "total_episode"
	// FieldEpisode holds the string denoting the episode field in the database.
	FieldEpisode = "episode"
	// FieldLanguage holds the string denoting the language field in the database.
	FieldLanguage = "language"
	// FieldSharpness holds the string denoting the sharpness field in the database.
	FieldSharpness = "sharpness"
	// FieldWatermark holds the string denoting the watermark field in the database.
	FieldWatermark = "watermark"
	// FieldPermission holds the string denoting the permission field in the database.
	FieldPermission = "permission"
	// FieldSign holds the string denoting the sign field in the database.
	FieldSign = "sign"
	// FieldTotalBlocks holds the string denoting the total_blocks field in the database.
	FieldTotalBlocks = "total_blocks"
	// EdgeTopLists holds the string denoting the top_lists edge name in mutations.
	EdgeTopLists = "top_lists"
	// EdgeChannel holds the string denoting the channel edge name in mutations.
	EdgeChannel = "channel"
	// Table holds the table name of the informationv1 in the database.
	Table = "information_v1s"
	// TopListsTable is the table that holds the top_lists relation/edge.
	TopListsTable = "top_lists"
	// TopListsInverseTable is the table name for the TopList entity.
	// It exists in this package in order to avoid circular dependency with the "toplist" package.
	TopListsInverseTable = "top_lists"
	// TopListsColumn is the table column denoting the top_lists relation/edge.
	TopListsColumn = "information_id"
	// ChannelTable is the table that holds the channel relation/edge.
	ChannelTable = "information_v1s"
	// ChannelInverseTable is the table name for the Channel entity.
	// It exists in this package in order to avoid circular dependency with the "channel" package.
	ChannelInverseTable = "channels"
	// ChannelColumn is the table column denoting the channel relation/edge.
	ChannelColumn = "channel_id"
)

// Columns holds all SQL columns for informationv1 fields.
var Columns = []string{
	FieldID,
	FieldCreatedUnix,
	FieldUpdatedUnix,
	FieldDeletedUnix,
	FieldChannelID,
	FieldRoot,
	FieldThumb,
	FieldThumbPath,
	FieldPoster,
	FieldPosterPath,
	FieldMedia,
	FieldMediaPath,
	FieldMediaIndex,
	FieldFrames,
	FieldFramesPath,
	FieldFramesParticulars,
	FieldTitle,
	FieldVideoNo,
	FieldIntro,
	FieldAlias,
	FieldRole,
	FieldDirector,
	FieldSystematics,
	FieldProducer,
	FieldPublisher,
	FieldSortType,
	FieldCaption,
	FieldGroup,
	FieldIndex,
	FieldReleaseDate,
	FieldFormat,
	FieldSeries,
	FieldTags,
	FieldLength,
	FieldSample,
	FieldUncensored,
	FieldSeason,
	FieldTotalEpisode,
	FieldEpisode,
	FieldLanguage,
	FieldSharpness,
	FieldWatermark,
	FieldPermission,
	FieldSign,
	FieldTotalBlocks,
}

// ValidColumn reports if the column name is valid (part of the table columns).
func ValidColumn(column string) bool {
	for i := range Columns {
		if column == Columns[i] {
			return true
		}
	}
	return false
}

var (
	// DefaultCreatedUnix holds the default value on creation for the "created_unix" field.
	DefaultCreatedUnix int64
	// DefaultUpdatedUnix holds the default value on creation for the "updated_unix" field.
	DefaultUpdatedUnix int64
	// DefaultRoot holds the default value on creation for the "root" field.
	DefaultRoot string
	// DefaultThumb holds the default value on creation for the "thumb" field.
	DefaultThumb string
	// DefaultThumbPath holds the default value on creation for the "thumb_path" field.
	DefaultThumbPath string
	// DefaultPoster holds the default value on creation for the "poster" field.
	DefaultPoster string
	// DefaultPosterPath holds the default value on creation for the "poster_path" field.
	DefaultPosterPath string
	// DefaultMedia holds the default value on creation for the "media" field.
	DefaultMedia string
	// DefaultMediaPath holds the default value on creation for the "media_path" field.
	DefaultMediaPath string
	// DefaultMediaIndex holds the default value on creation for the "media_index" field.
	DefaultMediaIndex string
	// DefaultFrames holds the default value on creation for the "frames" field.
	DefaultFrames string
	// DefaultFramesPath holds the default value on creation for the "frames_path" field.
	DefaultFramesPath string
	// DefaultTitle holds the default value on creation for the "title" field.
	DefaultTitle string
	// DefaultVideoNo holds the default value on creation for the "video_no" field.
	DefaultVideoNo string
	// DefaultIntro holds the default value on creation for the "intro" field.
	DefaultIntro string
	// DefaultDirector holds the default value on creation for the "director" field.
	DefaultDirector string
	// DefaultSystematics holds the default value on creation for the "systematics" field.
	DefaultSystematics string
	// DefaultProducer holds the default value on creation for the "producer" field.
	DefaultProducer string
	// DefaultPublisher holds the default value on creation for the "publisher" field.
	DefaultPublisher string
	// DefaultSortType holds the default value on creation for the "sort_type" field.
	DefaultSortType string
	// DefaultCaption holds the default value on creation for the "caption" field.
	DefaultCaption string
	// DefaultGroup holds the default value on creation for the "group" field.
	DefaultGroup string
	// DefaultIndex holds the default value on creation for the "index" field.
	DefaultIndex string
	// DefaultReleaseDate holds the default value on creation for the "release_date" field.
	DefaultReleaseDate string
	// DefaultFormat holds the default value on creation for the "format" field.
	DefaultFormat string
	// DefaultSeries holds the default value on creation for the "series" field.
	DefaultSeries string
	// DefaultLength holds the default value on creation for the "length" field.
	DefaultLength string
	// DefaultUncensored holds the default value on creation for the "uncensored" field.
	DefaultUncensored string
	// DefaultSeason holds the default value on creation for the "season" field.
	DefaultSeason string
	// DefaultTotalEpisode holds the default value on creation for the "total_episode" field.
	DefaultTotalEpisode string
	// DefaultEpisode holds the default value on creation for the "episode" field.
	DefaultEpisode string
	// DefaultLanguage holds the default value on creation for the "language" field.
	DefaultLanguage string
	// DefaultSharpness holds the default value on creation for the "sharpness" field.
	DefaultSharpness string
	// DefaultWatermark holds the default value on creation for the "watermark" field.
	DefaultWatermark bool
	// DefaultTotalBlocks holds the default value on creation for the "total_blocks" field.
	DefaultTotalBlocks int
	// DefaultID holds the default value on creation for the "id" field.
	DefaultID func() uuid.UUID
)

// Permission defines the type for the "permission" enum field.
type Permission string

// PermissionFree is the default value of the Permission enum.
const DefaultPermission = PermissionFree

// Permission values.
const (
	PermissionFree Permission = "free"
	PermissionVip  Permission = "vip"
)

func (pe Permission) String() string {
	return string(pe)
}

// PermissionValidator is a validator for the "permission" field enum values. It is called by the builders before save.
func PermissionValidator(pe Permission) error {
	switch pe {
	case PermissionFree, PermissionVip:
		return nil
	default:
		return fmt.Errorf("informationv1: invalid enum value for permission field: %q", pe)
	}
}
