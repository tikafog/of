// Code generated by ent, DO NOT EDIT.

package migrate

import (
	"entgo.io/ent/dialect/sql/schema"
	"entgo.io/ent/schema/field"
)

var (
	// AnnouncesColumns holds the columns for the "announces" table.
	AnnouncesColumns = []*schema.Column{
		{Name: "id", Type: field.TypeUUID, Unique: true},
		{Name: "created_unix", Type: field.TypeInt64, Default: 0},
		{Name: "updated_unix", Type: field.TypeInt64, Default: 0},
		{Name: "deleted_unix", Type: field.TypeInt64, Nullable: true},
		{Name: "announce_no", Type: field.TypeString, Default: ""},
		{Name: "title", Type: field.TypeString, Size: 2147483647, Default: ""},
		{Name: "kind", Type: field.TypeEnum, Enums: []string{"notice", "event", "announcement", "update"}, Default: "notice"},
		{Name: "content", Type: field.TypeString, Size: 2147483647, Default: ""},
		{Name: "link", Type: field.TypeString, Default: ""},
		{Name: "sign", Type: field.TypeString, Nullable: true},
	}
	// AnnouncesTable holds the schema information for the "announces" table.
	AnnouncesTable = &schema.Table{
		Name:       "announces",
		Columns:    AnnouncesColumns,
		PrimaryKey: []*schema.Column{AnnouncesColumns[0]},
	}
	// ChannelsColumns holds the columns for the "channels" table.
	ChannelsColumns = []*schema.Column{
		{Name: "id", Type: field.TypeUUID, Unique: true},
		{Name: "created_unix", Type: field.TypeInt64, Default: 0},
		{Name: "updated_unix", Type: field.TypeInt64, Default: 0},
		{Name: "deleted_unix", Type: field.TypeInt64, Nullable: true},
		{Name: "comment", Type: field.TypeString, Nullable: true},
	}
	// ChannelsTable holds the schema information for the "channels" table.
	ChannelsTable = &schema.Table{
		Name:       "channels",
		Columns:    ChannelsColumns,
		PrimaryKey: []*schema.Column{ChannelsColumns[0]},
	}
	// DiscoveriesColumns holds the columns for the "discoveries" table.
	DiscoveriesColumns = []*schema.Column{
		{Name: "id", Type: field.TypeUUID, Unique: true},
		{Name: "created_unix", Type: field.TypeInt64, Default: 0},
		{Name: "updated_unix", Type: field.TypeInt64, Default: 0},
		{Name: "deleted_unix", Type: field.TypeInt64, Nullable: true},
		{Name: "date", Type: field.TypeString, Default: "2006-01-02T15:04:05Z07:00"},
		{Name: "rid", Type: field.TypeString, Default: ""},
		{Name: "title", Type: field.TypeString, Size: 2147483647, Default: ""},
		{Name: "detail", Type: field.TypeString, Size: 2147483647, Default: ""},
		{Name: "mtype", Type: field.TypeEnum, Enums: []string{"none", "video", "photo", "both"}, Default: "both"},
		{Name: "links", Type: field.TypeJSON},
	}
	// DiscoveriesTable holds the schema information for the "discoveries" table.
	DiscoveriesTable = &schema.Table{
		Name:       "discoveries",
		Columns:    DiscoveriesColumns,
		PrimaryKey: []*schema.Column{DiscoveriesColumns[0]},
	}
	// InformationV1sColumns holds the columns for the "information_v1s" table.
	InformationV1sColumns = []*schema.Column{
		{Name: "id", Type: field.TypeUUID, Unique: true},
		{Name: "created_unix", Type: field.TypeInt64, Default: 0},
		{Name: "updated_unix", Type: field.TypeInt64, Default: 0},
		{Name: "deleted_unix", Type: field.TypeInt64, Nullable: true},
		{Name: "root", Type: field.TypeString, Default: ""},
		{Name: "thumb", Type: field.TypeString, Default: ""},
		{Name: "thumb_path", Type: field.TypeString, Default: ""},
		{Name: "poster", Type: field.TypeString, Default: ""},
		{Name: "poster_path", Type: field.TypeString, Default: ""},
		{Name: "media", Type: field.TypeString, Default: ""},
		{Name: "media_path", Type: field.TypeString, Default: ""},
		{Name: "media_index", Type: field.TypeString, Default: ""},
		{Name: "frames", Type: field.TypeString, Default: ""},
		{Name: "frames_path", Type: field.TypeString, Default: ""},
		{Name: "frames_particulars", Type: field.TypeJSON, Nullable: true},
		{Name: "title", Type: field.TypeString, Default: ""},
		{Name: "video_no", Type: field.TypeString, Default: ""},
		{Name: "intro", Type: field.TypeString, Size: 2147483647, Default: ""},
		{Name: "alias", Type: field.TypeJSON},
		{Name: "role", Type: field.TypeJSON},
		{Name: "director", Type: field.TypeString, Default: ""},
		{Name: "systematics", Type: field.TypeString, Default: ""},
		{Name: "producer", Type: field.TypeString, Default: ""},
		{Name: "publisher", Type: field.TypeString, Default: ""},
		{Name: "sort_type", Type: field.TypeString, Default: ""},
		{Name: "caption", Type: field.TypeString, Default: ""},
		{Name: "group", Type: field.TypeString, Default: ""},
		{Name: "index", Type: field.TypeString, Default: ""},
		{Name: "release_date", Type: field.TypeString, Default: ""},
		{Name: "format", Type: field.TypeString, Default: ""},
		{Name: "series", Type: field.TypeString, Default: ""},
		{Name: "tags", Type: field.TypeJSON},
		{Name: "length", Type: field.TypeString, Default: ""},
		{Name: "sample", Type: field.TypeJSON},
		{Name: "uncensored", Type: field.TypeString, Default: ""},
		{Name: "season", Type: field.TypeString, Default: ""},
		{Name: "total_episode", Type: field.TypeString, Default: ""},
		{Name: "episode", Type: field.TypeString, Default: ""},
		{Name: "language", Type: field.TypeString, Default: ""},
		{Name: "sharpness", Type: field.TypeString, Default: ""},
		{Name: "watermark", Type: field.TypeBool, Default: false},
		{Name: "permission", Type: field.TypeEnum, Enums: []string{"free", "vip"}, Default: "free"},
		{Name: "sign", Type: field.TypeString, Nullable: true},
		{Name: "total_blocks", Type: field.TypeInt, Default: 0},
		{Name: "channel_id", Type: field.TypeUUID, Nullable: true},
	}
	// InformationV1sTable holds the schema information for the "information_v1s" table.
	InformationV1sTable = &schema.Table{
		Name:       "information_v1s",
		Columns:    InformationV1sColumns,
		PrimaryKey: []*schema.Column{InformationV1sColumns[0]},
		ForeignKeys: []*schema.ForeignKey{
			{
				Symbol:     "information_v1s_channels_informations",
				Columns:    []*schema.Column{InformationV1sColumns[44]},
				RefColumns: []*schema.Column{ChannelsColumns[0]},
				OnDelete:   schema.SetNull,
			},
		},
		Indexes: []*schema.Index{
			{
				Name:    "informationv1_channel_id",
				Unique:  false,
				Columns: []*schema.Column{InformationV1sColumns[44]},
			},
			{
				Name:    "informationv1_root",
				Unique:  false,
				Columns: []*schema.Column{InformationV1sColumns[4]},
			},
		},
	}
	// PagesColumns holds the columns for the "pages" table.
	PagesColumns = []*schema.Column{
		{Name: "id", Type: field.TypeUUID, Unique: true},
		{Name: "created_unix", Type: field.TypeInt64, Default: 0},
		{Name: "updated_unix", Type: field.TypeInt64, Default: 0},
		{Name: "deleted_unix", Type: field.TypeInt64, Nullable: true},
		{Name: "title", Type: field.TypeString, Default: "home"},
		{Name: "featured_index", Type: field.TypeInt8, Default: 0},
		{Name: "featured_content", Type: field.TypeString, Default: ""},
		{Name: "recommend", Type: field.TypeInt64, Default: 0},
		{Name: "parent_id", Type: field.TypeUUID, Nullable: true},
	}
	// PagesTable holds the schema information for the "pages" table.
	PagesTable = &schema.Table{
		Name:       "pages",
		Columns:    PagesColumns,
		PrimaryKey: []*schema.Column{PagesColumns[0]},
		ForeignKeys: []*schema.ForeignKey{
			{
				Symbol:     "pages_pages_subpages",
				Columns:    []*schema.Column{PagesColumns[8]},
				RefColumns: []*schema.Column{PagesColumns[0]},
				OnDelete:   schema.SetNull,
			},
		},
	}
	// TopListsColumns holds the columns for the "top_lists" table.
	TopListsColumns = []*schema.Column{
		{Name: "id", Type: field.TypeUUID, Unique: true},
		{Name: "created_unix", Type: field.TypeInt64, Default: 0},
		{Name: "updated_unix", Type: field.TypeInt64, Default: 0},
		{Name: "deleted_unix", Type: field.TypeInt64, Nullable: true},
		{Name: "title", Type: field.TypeString, Default: ""},
		{Name: "intro", Type: field.TypeString, Default: ""},
		{Name: "category", Type: field.TypeEnum, Enums: []string{"top", "newest", "hottest", "star", "special", "featured", "producer", "exclusive", "normal"}, Default: "normal"},
		{Name: "lower_banner", Type: field.TypeEnum, Enums: []string{"free", "discount", "event", "premium", "collection", "liked", "none"}, Default: "none"},
		{Name: "top_right", Type: field.TypeEnum, Enums: []string{"free", "discount", "event", "premium", "collection", "liked", "none"}, Default: "none"},
		{Name: "information_id", Type: field.TypeUUID, Nullable: true},
		{Name: "page_id", Type: field.TypeUUID, Nullable: true},
	}
	// TopListsTable holds the schema information for the "top_lists" table.
	TopListsTable = &schema.Table{
		Name:       "top_lists",
		Columns:    TopListsColumns,
		PrimaryKey: []*schema.Column{TopListsColumns[0]},
		ForeignKeys: []*schema.ForeignKey{
			{
				Symbol:     "top_lists_information_v1s_top_lists",
				Columns:    []*schema.Column{TopListsColumns[9]},
				RefColumns: []*schema.Column{InformationV1sColumns[0]},
				OnDelete:   schema.SetNull,
			},
			{
				Symbol:     "top_lists_pages_top_lists",
				Columns:    []*schema.Column{TopListsColumns[10]},
				RefColumns: []*schema.Column{PagesColumns[0]},
				OnDelete:   schema.SetNull,
			},
		},
	}
	// VersionsColumns holds the columns for the "versions" table.
	VersionsColumns = []*schema.Column{
		{Name: "id", Type: field.TypeInt, Increment: true},
		{Name: "current", Type: field.TypeInt, Default: 1},
		{Name: "last", Type: field.TypeInt, Default: 1},
	}
	// VersionsTable holds the schema information for the "versions" table.
	VersionsTable = &schema.Table{
		Name:       "versions",
		Columns:    VersionsColumns,
		PrimaryKey: []*schema.Column{VersionsColumns[0]},
	}
	// Tables holds all the tables in the schema.
	Tables = []*schema.Table{
		AnnouncesTable,
		ChannelsTable,
		DiscoveriesTable,
		InformationV1sTable,
		PagesTable,
		TopListsTable,
		VersionsTable,
	}
)

func init() {
	InformationV1sTable.ForeignKeys[0].RefTable = ChannelsTable
	PagesTable.ForeignKeys[0].RefTable = PagesTable
	TopListsTable.ForeignKeys[0].RefTable = InformationV1sTable
	TopListsTable.ForeignKeys[1].RefTable = PagesTable
}
