// Code generated by ent, DO NOT EDIT.

package page

import (
	"github.com/google/uuid"
)

const (
	// Label holds the string label denoting the page type in the database.
	Label = "page"
	// FieldID holds the string denoting the id field in the database.
	FieldID = "id"
	// FieldCreatedUnix holds the string denoting the created_unix field in the database.
	FieldCreatedUnix = "created_unix"
	// FieldUpdatedUnix holds the string denoting the updated_unix field in the database.
	FieldUpdatedUnix = "updated_unix"
	// FieldDeletedUnix holds the string denoting the deleted_unix field in the database.
	FieldDeletedUnix = "deleted_unix"
	// FieldParentID holds the string denoting the parent_id field in the database.
	FieldParentID = "parent_id"
	// FieldTitle holds the string denoting the title field in the database.
	FieldTitle = "title"
	// FieldFeaturedIndex holds the string denoting the featured_index field in the database.
	FieldFeaturedIndex = "featured_index"
	// FieldFeaturedContent holds the string denoting the featured_content field in the database.
	FieldFeaturedContent = "featured_content"
	// FieldRecommend holds the string denoting the recommend field in the database.
	FieldRecommend = "recommend"
	// EdgeParent holds the string denoting the parent edge name in mutations.
	EdgeParent = "parent"
	// EdgeSubpages holds the string denoting the subpages edge name in mutations.
	EdgeSubpages = "subpages"
	// EdgeTopLists holds the string denoting the top_lists edge name in mutations.
	EdgeTopLists = "top_lists"
	// Table holds the table name of the page in the database.
	Table = "pages"
	// ParentTable is the table that holds the parent relation/edge.
	ParentTable = "pages"
	// ParentColumn is the table column denoting the parent relation/edge.
	ParentColumn = "parent_id"
	// SubpagesTable is the table that holds the subpages relation/edge.
	SubpagesTable = "pages"
	// SubpagesColumn is the table column denoting the subpages relation/edge.
	SubpagesColumn = "parent_id"
	// TopListsTable is the table that holds the top_lists relation/edge.
	TopListsTable = "top_lists"
	// TopListsInverseTable is the table name for the TopList entity.
	// It exists in this package in order to avoid circular dependency with the "toplist" package.
	TopListsInverseTable = "top_lists"
	// TopListsColumn is the table column denoting the top_lists relation/edge.
	TopListsColumn = "page_id"
)

// Columns holds all SQL columns for page fields.
var Columns = []string{
	FieldID,
	FieldCreatedUnix,
	FieldUpdatedUnix,
	FieldDeletedUnix,
	FieldParentID,
	FieldTitle,
	FieldFeaturedIndex,
	FieldFeaturedContent,
	FieldRecommend,
}

// ValidColumn reports if the column name is valid (part of the table columns).
func ValidColumn(column string) bool {
	for i := range Columns {
		if column == Columns[i] {
			return true
		}
	}
	return false
}

var (
	// DefaultCreatedUnix holds the default value on creation for the "created_unix" field.
	DefaultCreatedUnix int64
	// DefaultUpdatedUnix holds the default value on creation for the "updated_unix" field.
	DefaultUpdatedUnix int64
	// DefaultTitle holds the default value on creation for the "title" field.
	DefaultTitle string
	// DefaultFeaturedIndex holds the default value on creation for the "featured_index" field.
	DefaultFeaturedIndex int8
	// DefaultFeaturedContent holds the default value on creation for the "featured_content" field.
	DefaultFeaturedContent string
	// DefaultRecommend holds the default value on creation for the "recommend" field.
	DefaultRecommend int64
	// DefaultID holds the default value on creation for the "id" field.
	DefaultID func() uuid.UUID
)
